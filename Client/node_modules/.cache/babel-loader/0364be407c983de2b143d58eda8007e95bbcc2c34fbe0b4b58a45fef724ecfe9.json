{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\GokulakrishnanK\\\\Downloads\\\\Admin_dashboard\\\\Admin_dashboard\\\\Client\\\\src\\\\Components\\\\AddCourseForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\"; // Ensure axios is installed\nimport { ToastContainer, toast } from \"react-toastify\";\nimport { ClipLoader } from \"react-spinners\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddCourseForm = () => {\n  _s();\n  const [courseName, setCourseName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [trainers, setTrainers] = useState([]); // State to hold trainer options\n  const [selectedTrainer, setSelectedTrainer] = useState(\"\"); // State for selected trainer\n  const [message, setMessage] = useState(\"\"); // State for displaying success or error messages\n  const [loading, setLoading] = useState(false); // Add loading state\n\n  console.log(courseName);\n  useEffect(() => {\n    // Fetch trainers from the backend\n    const fetchTrainers = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:4000/trainer/fetchTrainer\");\n        console.log(response.data, \"complete\");\n        const trainerNames = response.data.map(trainer => ({\n          id: trainer.id,\n          // Ensure this matches your API response\n          name: trainer.name,\n          role: trainer.role_id\n        }));\n        console.log(\"trainerDetails\", trainerNames);\n        setTrainers(trainerNames); // Set the trainers state\n      } catch (error) {\n        console.error(\"Error fetching trainers:\", error);\n        setMessage(\"Failed to fetch trainers.\");\n      }\n    };\n    fetchTrainers(); // Fetch trainers when the component mounts\n  }, []);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    try {\n      // Send course details and trainerId together in a single request\n      const courseResponse = await axios.post(\"http://localhost:4000/course/add\",\n      // Ensure this is the correct route\n      {\n        courseName: courseName,\n        description,\n        // Assuming your API accepts this parameter\n        trainerId: selectedTrainer !== \"\" ? parseInt(selectedTrainer) : null // Include trainerId in the same payload\n      });\n      console.log(courseResponse.data);\n\n      // Assuming the backend returns the newly added course data\n      const newCourse = courseResponse.data;\n      console.log(newCourse);\n\n      // Clear form fields after submission\n      setCourseName(\"\");\n      setDescription(\"\");\n      setSelectedTrainer(\"\");\n      setMessage(\"Course added and assigned to trainer successfully!\");\n      toast.success(\"course added successfully\");\n    } catch (error) {\n      console.error(\"Error adding course and assigning to trainer:\", error);\n      setMessage(\"Failed to add course and assign to trainer.\");\n      toast.error(\"error addding course\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"bg-white shadow-md rounded-lg p-6 w-96\",\n    children: [message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 19\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"courseName\",\n        className: \"block text-mid font-medium mb-2\",\n        children: \"Course Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"courseName\",\n        value: courseName,\n        onChange: e => setCourseName(e.target.value),\n        className: \"w-full px-4 py-2 border border-mid rounded focus:outline-none focus:ring-2 focus:ring-mid\",\n        placeholder: \"Enter course name\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"trainer\",\n        className: \"block text-mid font-medium mb-2\",\n        children: \"Trainer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"trainer\",\n        value: selectedTrainer,\n        onChange: e => {\n          setSelectedTrainer(e.target.value);\n          console.log(selectedTrainer);\n        } // This will update the state\n        ,\n        className: \"w-full px-4 py-2 border border-mid rounded focus:outline-none focus:ring-2 focus:ring-mid\",\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          disabled: true,\n          children: \"Select a trainer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), trainers.map(trainer => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: trainer.id,\n          children: [trainer.name, \" \"]\n        }, trainer.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center\",\n      children: loading ?\n      /*#__PURE__*/\n      // Show loader when the form is being submitted\n      _jsxDEV(ClipLoader, {\n        color: \"#123abc\",\n        loading: loading,\n        size: 35\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }, this) :\n      /*#__PURE__*/\n      // Show the submit button when not loading\n      _jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"w-full bg-dark hover:bg-darker text-whiter font-bold py-2 px-4 rounded transition duration-200\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(AddCourseForm, \"f8md31Gdozva/2YA1WN0hF5Nkf0=\");\n_c = AddCourseForm;\nexport default AddCourseForm;\nvar _c;\n$RefreshReg$(_c, \"AddCourseForm\");","map":{"version":3,"names":["React","useState","useEffect","axios","ToastContainer","toast","ClipLoader","jsxDEV","_jsxDEV","AddCourseForm","_s","courseName","setCourseName","description","setDescription","trainers","setTrainers","selectedTrainer","setSelectedTrainer","message","setMessage","loading","setLoading","console","log","fetchTrainers","response","get","data","trainerNames","map","trainer","id","name","role","role_id","error","handleSubmit","e","preventDefault","courseResponse","post","trainerId","parseInt","newCourse","success","onSubmit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","value","onChange","target","placeholder","required","disabled","color","size","_c","$RefreshReg$"],"sources":["C:/Users/GokulakrishnanK/Downloads/Admin_dashboard/Admin_dashboard/Client/src/Components/AddCourseForm.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\"; // Ensure axios is installed\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport { ClipLoader } from \"react-spinners\";\r\n\r\nconst AddCourseForm = () => {\r\n  const [courseName, setCourseName] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [trainers, setTrainers] = useState([]); // State to hold trainer options\r\n  const [selectedTrainer, setSelectedTrainer] = useState(\"\"); // State for selected trainer\r\n  const [message, setMessage] = useState(\"\"); // State for displaying success or error messages\r\n  const [loading, setLoading] = useState(false); // Add loading state\r\n\r\n  console.log(courseName);\r\n\r\n  useEffect(() => {\r\n    // Fetch trainers from the backend\r\n    const fetchTrainers = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          \"http://localhost:4000/trainer/fetchTrainer\"\r\n        );\r\n        console.log(response.data, \"complete\");\r\n\r\n        const trainerNames = response.data.map((trainer) => ({\r\n          id: trainer.id, // Ensure this matches your API response\r\n          name: trainer.name,\r\n          role: trainer.role_id,\r\n        }));\r\n        console.log(\"trainerDetails\", trainerNames);\r\n\r\n        setTrainers(trainerNames); // Set the trainers state\r\n      } catch (error) {\r\n        console.error(\"Error fetching trainers:\", error);\r\n        setMessage(\"Failed to fetch trainers.\");\r\n      }\r\n    };\r\n\r\n    fetchTrainers(); // Fetch trainers when the component mounts\r\n  }, []);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n\r\n    try {\r\n      // Send course details and trainerId together in a single request\r\n      const courseResponse = await axios.post(\r\n        \"http://localhost:4000/course/add\", // Ensure this is the correct route\r\n        {\r\n          courseName: courseName,\r\n          description, // Assuming your API accepts this parameter\r\n          trainerId: selectedTrainer !== \"\" ? parseInt(selectedTrainer) : null, // Include trainerId in the same payload\r\n        }\r\n      );\r\n      console.log(courseResponse.data);\r\n\r\n      // Assuming the backend returns the newly added course data\r\n      const newCourse = courseResponse.data;\r\n      console.log(newCourse);\r\n\r\n      // Clear form fields after submission\r\n      setCourseName(\"\");\r\n      setDescription(\"\");\r\n      setSelectedTrainer(\"\");\r\n      setMessage(\"Course added and assigned to trainer successfully!\");\r\n      toast.success(\"course added successfully\");\r\n    } catch (error) {\r\n      console.error(\"Error adding course and assigning to trainer:\", error);\r\n      setMessage(\"Failed to add course and assign to trainer.\");\r\n      toast.error(\"error addding course\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form\r\n      onSubmit={handleSubmit}\r\n      className=\"bg-white shadow-md rounded-lg p-6 w-96\"\r\n    >\r\n      {message && <p>{message}</p>} {/* Display success or error message */}\r\n      <div className=\"mb-4\">\r\n        <label htmlFor=\"courseName\" className=\"block text-mid font-medium mb-2\">\r\n          Course Name\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"courseName\"\r\n          value={courseName}\r\n          onChange={(e) => setCourseName(e.target.value)}\r\n          className=\"w-full px-4 py-2 border border-mid rounded focus:outline-none focus:ring-2 focus:ring-mid\"\r\n          placeholder=\"Enter course name\"\r\n          required\r\n        />\r\n      </div>\r\n      {/* Uncomment if you want to include description field */}\r\n      {/* <div className=\"mb-4\">\r\n        <label\r\n          htmlFor=\"description\"\r\n          className=\"block text-mid font-medium mb-2\"\r\n        >\r\n          Description\r\n        </label>\r\n        <textarea\r\n          id=\"description\"\r\n          value={description}\r\n          onChange={(e) => setDescription(e.target.value)}\r\n          className=\"w-full px-4 py-2 border border-mid rounded focus:outline-none focus:ring-2 focus:ring-mid\"\r\n          placeholder=\"Enter course description\"\r\n          required\r\n        />\r\n      </div> */}\r\n      <div className=\"mb-4\">\r\n        <label htmlFor=\"trainer\" className=\"block text-mid font-medium mb-2\">\r\n          Trainer\r\n        </label>\r\n        <select\r\n          id=\"trainer\"\r\n          value={selectedTrainer}\r\n          onChange={(e) => {\r\n            setSelectedTrainer(e.target.value);\r\n            console.log(selectedTrainer);\r\n          }} // This will update the state\r\n          className=\"w-full px-4 py-2 border border-mid rounded focus:outline-none focus:ring-2 focus:ring-mid\"\r\n          required\r\n        >\r\n          <option value=\"\" disabled>\r\n            Select a trainer\r\n          </option>\r\n          {trainers.map((trainer) => (\r\n            <option key={trainer.id} value={trainer.id}>\r\n              {trainer.name} {/* Displaying only the trainer's name */}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n      <div className=\"flex justify-center\">\r\n        {loading ? (\r\n          // Show loader when the form is being submitted\r\n          <ClipLoader color={\"#123abc\"} loading={loading} size={35} />\r\n        ) : (\r\n          // Show the submit button when not loading\r\n          <button\r\n            type=\"submit\"\r\n            className=\"w-full bg-dark hover:bg-darker text-whiter font-bold py-2 px-4 rounded transition duration-200\"\r\n          >\r\n            Submit\r\n          </button>\r\n        )}\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddCourseForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}