{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\GokulakrishnanK\\\\Downloads\\\\Admin_dashboard\\\\Admin_dashboard\\\\Client\\\\src\\\\charts\\\\TopPerformersRadarChart.jsx\";\n// TopPerformersRadarChart.js\nimport React from \"react\";\nimport Chart from \"react-apexcharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TopPerformersRadarChart = ({\n  data\n}) => {\n  // Check if data is available\n  if (!data || !Array.isArray(data) || data.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No data available for the chart.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 12\n    }, this); // Display a message if no data\n  }\n\n  // Calculate average marks for each employee\n  const averageMarks = data.reduce((acc, item) => {\n    if (!acc[item.name]) {\n      acc[item.name] = {\n        name: item.name,\n        marks: {}\n      };\n    }\n    acc[item.name].marks[item.course_name] = item.avg_mark || 0; // Set avg_mark for course\n    return acc;\n  }, {});\n\n  // Create an array for the radar chart\n  const series = Object.values(averageMarks).map(emp => ({\n    name: emp.name,\n    data: Object.values(emp.marks) // Get marks for radar chart\n  }));\n  const categories = Object.keys(series[0].data).map((_, index) => {\n    var _data$index;\n    return ((_data$index = data[index]) === null || _data$index === void 0 ? void 0 : _data$index.course_name) || `Course ${index + 1}`;\n  });\n  const options = {\n    chart: {\n      type: \"radar\",\n      height: 350\n    },\n    title: {\n      text: \"Top Performers Radar Chart\"\n    },\n    xaxis: {\n      categories: categories\n    },\n    plotOptions: {\n      radar: {\n        polygons: {\n          strokeColor: \"#e0e0e0\",\n          fill: {\n            opacity: 0.5\n          }\n        }\n      }\n    },\n    markers: {\n      size: 5\n    },\n    colors: [\"#FF4560\", \"#008FFB\", \"#00E396\"] // Custom colors for the radar chart\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Chart, {\n      options: options,\n      series: series,\n      type: \"radar\",\n      height: 350\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_c = TopPerformersRadarChart;\nexport default TopPerformersRadarChart;\nvar _c;\n$RefreshReg$(_c, \"TopPerformersRadarChart\");","map":{"version":3,"names":["React","Chart","jsxDEV","_jsxDEV","TopPerformersRadarChart","data","Array","isArray","length","children","fileName","_jsxFileName","lineNumber","columnNumber","averageMarks","reduce","acc","item","name","marks","course_name","avg_mark","series","Object","values","map","emp","categories","keys","_","index","_data$index","options","chart","type","height","title","text","xaxis","plotOptions","radar","polygons","strokeColor","fill","opacity","markers","size","colors","_c","$RefreshReg$"],"sources":["C:/Users/GokulakrishnanK/Downloads/Admin_dashboard/Admin_dashboard/Client/src/charts/TopPerformersRadarChart.jsx"],"sourcesContent":["// TopPerformersRadarChart.js\r\nimport React from \"react\";\r\nimport Chart from \"react-apexcharts\";\r\n\r\nconst TopPerformersRadarChart = ({ data }) => {\r\n  // Check if data is available\r\n  if (!data || !Array.isArray(data) || data.length === 0) {\r\n    return <div>No data available for the chart.</div>; // Display a message if no data\r\n  }\r\n\r\n  // Calculate average marks for each employee\r\n  const averageMarks = data.reduce((acc, item) => {\r\n    if (!acc[item.name]) {\r\n      acc[item.name] = {\r\n        name: item.name,\r\n        marks: {},\r\n      };\r\n    }\r\n    acc[item.name].marks[item.course_name] = item.avg_mark || 0; // Set avg_mark for course\r\n    return acc;\r\n  }, {});\r\n\r\n  // Create an array for the radar chart\r\n  const series = Object.values(averageMarks).map((emp) => ({\r\n    name: emp.name,\r\n    data: Object.values(emp.marks), // Get marks for radar chart\r\n  }));\r\n\r\n  const categories = Object.keys(series[0].data).map(\r\n    (_, index) => data[index]?.course_name || `Course ${index + 1}`\r\n  );\r\n\r\n  const options = {\r\n    chart: {\r\n      type: \"radar\",\r\n      height: 350,\r\n    },\r\n    title: {\r\n      text: \"Top Performers Radar Chart\",\r\n    },\r\n    xaxis: {\r\n      categories: categories,\r\n    },\r\n    plotOptions: {\r\n      radar: {\r\n        polygons: {\r\n          strokeColor: \"#e0e0e0\",\r\n          fill: {\r\n            opacity: 0.5,\r\n          },\r\n        },\r\n      },\r\n    },\r\n    markers: {\r\n      size: 5,\r\n    },\r\n    colors: [\"#FF4560\", \"#008FFB\", \"#00E396\"], // Custom colors for the radar chart\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Chart options={options} series={series} type=\"radar\" height={350} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TopPerformersRadarChart;\r\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,uBAAuB,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAC5C;EACA,IAAI,CAACA,IAAI,IAAI,CAACC,KAAK,CAACC,OAAO,CAACF,IAAI,CAAC,IAAIA,IAAI,CAACG,MAAM,KAAK,CAAC,EAAE;IACtD,oBAAOL,OAAA;MAAAM,QAAA,EAAK;IAAgC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,CAAC,CAAC;EACtD;;EAEA;EACA,MAAMC,YAAY,GAAGT,IAAI,CAACU,MAAM,CAAC,CAACC,GAAG,EAAEC,IAAI,KAAK;IAC9C,IAAI,CAACD,GAAG,CAACC,IAAI,CAACC,IAAI,CAAC,EAAE;MACnBF,GAAG,CAACC,IAAI,CAACC,IAAI,CAAC,GAAG;QACfA,IAAI,EAAED,IAAI,CAACC,IAAI;QACfC,KAAK,EAAE,CAAC;MACV,CAAC;IACH;IACAH,GAAG,CAACC,IAAI,CAACC,IAAI,CAAC,CAACC,KAAK,CAACF,IAAI,CAACG,WAAW,CAAC,GAAGH,IAAI,CAACI,QAAQ,IAAI,CAAC,CAAC,CAAC;IAC7D,OAAOL,GAAG;EACZ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAEN;EACA,MAAMM,MAAM,GAAGC,MAAM,CAACC,MAAM,CAACV,YAAY,CAAC,CAACW,GAAG,CAAEC,GAAG,KAAM;IACvDR,IAAI,EAAEQ,GAAG,CAACR,IAAI;IACdb,IAAI,EAAEkB,MAAM,CAACC,MAAM,CAACE,GAAG,CAACP,KAAK,CAAC,CAAE;EAClC,CAAC,CAAC,CAAC;EAEH,MAAMQ,UAAU,GAAGJ,MAAM,CAACK,IAAI,CAACN,MAAM,CAAC,CAAC,CAAC,CAACjB,IAAI,CAAC,CAACoB,GAAG,CAChD,CAACI,CAAC,EAAEC,KAAK;IAAA,IAAAC,WAAA;IAAA,OAAK,EAAAA,WAAA,GAAA1B,IAAI,CAACyB,KAAK,CAAC,cAAAC,WAAA,uBAAXA,WAAA,CAAaX,WAAW,KAAI,UAAUU,KAAK,GAAG,CAAC,EAAE;EAAA,CACjE,CAAC;EAED,MAAME,OAAO,GAAG;IACdC,KAAK,EAAE;MACLC,IAAI,EAAE,OAAO;MACbC,MAAM,EAAE;IACV,CAAC;IACDC,KAAK,EAAE;MACLC,IAAI,EAAE;IACR,CAAC;IACDC,KAAK,EAAE;MACLX,UAAU,EAAEA;IACd,CAAC;IACDY,WAAW,EAAE;MACXC,KAAK,EAAE;QACLC,QAAQ,EAAE;UACRC,WAAW,EAAE,SAAS;UACtBC,IAAI,EAAE;YACJC,OAAO,EAAE;UACX;QACF;MACF;IACF,CAAC;IACDC,OAAO,EAAE;MACPC,IAAI,EAAE;IACR,CAAC;IACDC,MAAM,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC,CAAE;EAC7C,CAAC;EAED,oBACE5C,OAAA;IAAAM,QAAA,eACEN,OAAA,CAACF,KAAK;MAAC+B,OAAO,EAAEA,OAAQ;MAACV,MAAM,EAAEA,MAAO;MAACY,IAAI,EAAC,OAAO;MAACC,MAAM,EAAE;IAAI;MAAAzB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClE,CAAC;AAEV,CAAC;AAACmC,EAAA,GA5DI5C,uBAAuB;AA8D7B,eAAeA,uBAAuB;AAAC,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}