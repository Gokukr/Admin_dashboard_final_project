{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\GokulakrishnanK\\\\Downloads\\\\Admin_dashboard\\\\Admin_dashboard\\\\Client\\\\src\\\\charts\\\\BarChart.jsx\";\n// BarChart.js\nimport React from \"react\";\nimport Chart from \"react-apexcharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BarChart = ({\n  marks\n}) => {\n  // Calculate the average marks for each subject\n  const subjectMarks = marks.reduce((acc, mark) => {\n    const subject = mark.course_name; // Get the course name (subject)\n    const mark1 = mark.marks.mark1 || 0; // Get the mark, default to 0 if null\n\n    if (!acc[subject]) {\n      acc[subject] = {\n        totalMarks: 0,\n        count: 0\n      };\n    }\n    acc[subject].totalMarks += mark1; // Add the mark to the total\n    acc[subject].count += 1; // Increment the count for averaging\n\n    return acc;\n  }, {});\n\n  // Prepare data for the chart by calculating the average for each subject\n  const subjects = Object.keys(subjectMarks); // Array of subject names\n  const averageMarks = subjects.map(subject => {\n    const {\n      totalMarks,\n      count\n    } = subjectMarks[subject];\n    return (totalMarks / count).toFixed(2); // Calculate the average\n  });\n  const chartOptions = {\n    chart: {\n      type: \"bar\",\n      height: 250\n    },\n    plotOptions: {\n      bar: {\n        horizontal: false,\n        columnWidth: \"40%\",\n        endingShape: \"rounded\"\n      }\n    },\n    dataLabels: {\n      enabled: false\n    },\n    xaxis: {\n      categories: subjects // Subject names for the x-axis\n    },\n    colors: [\"#E4B1F0\"],\n    // Color palette\n    fill: {\n      opacity: 1\n    },\n    tooltip: {\n      y: {\n        formatter: function (val) {\n          return `${val} marks`; // Custom tooltip format\n        }\n      }\n    },\n    title: {\n      text: \"Average Marks by Subject\",\n      align: \"center\",\n      style: {\n        color: \"#433878\",\n        fontSize: \"20px\"\n      }\n    }\n  };\n  const chartData = [{\n    name: \"Average Marks\",\n    data: averageMarks // Use the average marks for the bar chart\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-whiter p-6 shadow-md rounded-md\",\n    children: /*#__PURE__*/_jsxDEV(Chart, {\n      options: chartOptions,\n      series: chartData,\n      type: \"bar\",\n      height: 340\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_c = BarChart;\nexport default BarChart;\nvar _c;\n$RefreshReg$(_c, \"BarChart\");","map":{"version":3,"names":["React","Chart","jsxDEV","_jsxDEV","BarChart","marks","subjectMarks","reduce","acc","mark","subject","course_name","mark1","totalMarks","count","subjects","Object","keys","averageMarks","map","toFixed","chartOptions","chart","type","height","plotOptions","bar","horizontal","columnWidth","endingShape","dataLabels","enabled","xaxis","categories","colors","fill","opacity","tooltip","y","formatter","val","title","text","align","style","color","fontSize","chartData","name","data","className","children","options","series","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/GokulakrishnanK/Downloads/Admin_dashboard/Admin_dashboard/Client/src/charts/BarChart.jsx"],"sourcesContent":["// BarChart.js\r\nimport React from \"react\";\r\nimport Chart from \"react-apexcharts\";\r\n\r\nconst BarChart = ({ marks }) => {\r\n  // Calculate the average marks for each subject\r\n  const subjectMarks = marks.reduce((acc, mark) => {\r\n    const subject = mark.course_name; // Get the course name (subject)\r\n    const mark1 = mark.marks.mark1 || 0; // Get the mark, default to 0 if null\r\n\r\n    if (!acc[subject]) {\r\n      acc[subject] = { totalMarks: 0, count: 0 };\r\n    }\r\n\r\n    acc[subject].totalMarks += mark1; // Add the mark to the total\r\n    acc[subject].count += 1; // Increment the count for averaging\r\n\r\n    return acc;\r\n  }, {});\r\n\r\n  // Prepare data for the chart by calculating the average for each subject\r\n  const subjects = Object.keys(subjectMarks); // Array of subject names\r\n  const averageMarks = subjects.map((subject) => {\r\n    const { totalMarks, count } = subjectMarks[subject];\r\n    return (totalMarks / count).toFixed(2); // Calculate the average\r\n  });\r\n\r\n  const chartOptions = {\r\n    chart: {\r\n      type: \"bar\",\r\n      height: 250,\r\n    },\r\n    plotOptions: {\r\n      bar: {\r\n        horizontal: false,\r\n        columnWidth: \"40%\",\r\n        endingShape: \"rounded\",\r\n      },\r\n    },\r\n    dataLabels: {\r\n      enabled: false,\r\n    },\r\n    xaxis: {\r\n      categories: subjects, // Subject names for the x-axis\r\n    },\r\n    colors: [\"#E4B1F0\"], // Color palette\r\n    fill: {\r\n      opacity: 1,\r\n    },\r\n    tooltip: {\r\n      y: {\r\n        formatter: function (val) {\r\n          return `${val} marks`; // Custom tooltip format\r\n        },\r\n      },\r\n    },\r\n    title: {\r\n      text: \"Average Marks by Subject\",\r\n      align: \"center\",\r\n      style: {\r\n        color: \"#433878\",\r\n        fontSize: \"20px\",\r\n      },\r\n    },\r\n  };\r\n\r\n  const chartData = [\r\n    {\r\n      name: \"Average Marks\",\r\n      data: averageMarks, // Use the average marks for the bar chart\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"bg-whiter p-6 shadow-md rounded-md\">\r\n      <Chart\r\n        options={chartOptions}\r\n        series={chartData}\r\n        type=\"bar\"\r\n        height={340}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BarChart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}